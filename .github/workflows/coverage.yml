name: Task - Rust Tests & Coverage

on:
  pull_request_target:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches-ignore:
      - main
  workflow_call:
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack
        env:
          SERVICES: s3, sqs
          DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: "AWS_ACCESS_KEY_ID"
          AWS_SECRET_ACCESS_KEY: "AWS_SECRET_ACCESS_KEY"
        ports:
          - 4566:4566
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Generate lockfile
        run: cargo generate-lockfile

      - name: Cache cargo registry
        uses: actions/cache@v3
        id: cache-registry
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        id: cache-index
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        id: cache-build
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Debug cache status
        run: |
          echo "Registry cache hit: ${{ steps.cache-registry.outputs.cache-hit }}"
          echo "Index cache hit: ${{ steps.cache-index.outputs.cache-hit }}"
          echo "Build cache hit: ${{ steps.cache-build.outputs.cache-hit }}"

          echo "Cargo registry size:"
          du -sh ~/.cargo/registry || echo "Registry not found"
          echo "Cargo index size:"
          du -sh ~/.cargo/git || echo "Index not found"
          echo "Target directory size:"
          du -sh target || echo "Target not found"

          echo "Content of target directory:"
          ls -R target || echo "Target directory not found"

      - name: Install cargo-llvm-cov and nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov,nextest

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Check Anvil Installation
        run: |
          if command -v anvil &> /dev/null
          then
              echo "Anvil is installed. Version information:"
              anvil --version
          else
              echo "Anvil is not installed or not in PATH"
              exit 1
          fi

      - name: Clean workspace
        run: |
          cargo llvm-cov clean --workspace

      - name: Run llvm-cov
        env:
          ETHEREUM_BLAST_RPC_URL: ${{ secrets.ETHEREUM_BLAST_RPC_URL }}
        run: |
          cargo llvm-cov nextest --release --lcov --output-path lcov.info --test-threads=1

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          files: lcov.info
          debug: true

      - uses: colpal/actions-clean@v1
        if: ${{ always() }}
